1. fan 작동
sudo sh -c 'echo 150 > /sys/devices/pwm-fan/target_pwm'

2.
#기존 opencv4.1.1 제거
sudo apt purge libopencv4*
sudo apt autoremove

#최대 전력 용량 사용
sudo nvpmodel -m 0
sudo jetson_clocks

#LibreOffice 제거
sudo apt-get purge libreoffice*
sudo apt-get clean

#시스템 수준 패키지 업데이트
sudo apt-get update && sudo apt-get upgrade

#install development tools
sudo apt-get install git cmake
sudo apt-get install libatlas-base-dev gfortran
sudo apt-get install libhdf5-serial-dev hdf5-tools
sudo apt-get install python3-dev
sudo apt-get install nano locate

'''
#scipy 전제조건
sudo apt-get install libfreetype6-dev python3-setuptools
sudo apt-get install protobuf-compiler libprotobuf-dev openssl
sudo apt-get install libssl-dev libcurl4-openssl-dev
sudo apt-get install cython3
'''

'''
#XML tools
sudo apt-get install libxml2-dev libxslt1-dev
'''

#CMake 업데이트
wget http://www.cmake.org/files/v3.13/cmake-3.13.0.tar.gz
tar xpvf cmake-3.13.0.tar.gz cmake-3.13.0/
cd cmake-3.13.0/
./bootstrap --system-curl
make -j4
echo 'export PATH=/home/nvidia/cmake-3.13.0/bin/:$PATH' >> ~/.bashrc
source ~/.bashrc

#opencv에 필요한 도구와 dependecy 설치
sudo apt-get install build-essential pkg-config
sudo apt-get install libtbb2 libtbb-dev

#코덱과 이미지 라이브러리 설치
sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev
sudo apt-get 설치 libxvidcore-dev libavresample-dev
sudo apt-get install libtiff-dev libjpeg-dev libpng-dev

#GUI라이브러리 설치
sudo apt-get install python-tk libgtk-3-dev
sudo apt-get install libcanberra-gtk-module libcanberra-gtk3-module

#웹캠 라이브러리
sudo apt-get install libv4l-dev libdc1394-22-dev

#파이썬 설치
wget https://bootstrap.pypa.io/get-pip.py
sudo python3 get-pip.py
rm get-pip.py

#opencv4.2 다운로드
cd ~
wget -O opencv.zip https://github.com/opencv/opencv/archive/4.2.0.zip
wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.2.0.zip
unzip opencv.zip
unzip opencv_contrib.zip
mv opencv-4.2.0 opencv
mv opencv_contrib-4.2.0 opencv_contrib

#빌드 디렉토리 생성
cd opencv
mkdir build
cd build

#주소 확인
pwd

#cmake 컴파일
cmake -D CMAKE_BUILD_TYPE=RELEASE \
	-D WITH_CUDA=ON \
	-D OPENCV_DNN_CUDA=ON \
	-D ENABLE_FAST_MATH=1 \
	-D CUDA_FAST_MATH=1 \
	-D CUDA_ARCH_PTX="" \
	-D CUDA_ARCH_BIN="5.3,6.2,7.2" \
	-D WITH_CUBLAS=ON \
	-D WITH_LIBV4L=ON \
	-D BUILD_opencv_python3=ON \
	-D BUILD_opencv_python2=OFF \
	-D BUILD_opencv_java=OFF \
	-D WITH_GSTREAMER=ON \
	-D WITH_GTK=ON \
	-D BUILD_TESTS=OFF \
	-D BUILD_PERF_TESTS=OFF \
	-D BUILD_EXAMPLES=OFF \
	-D OPENCV_ENABLE_NONFREE=ON \
	-D OPENCV_EXTRA_MODULES_PATH=/home/`whoami`/opencv_contrib/modules ..

'''
#cmake 새로 만들기(오류일때만)
cd ..
rm -rf build
mkdir build
cd build
'''

#opencv 컴파일
make -j4

#설치명령 실행
sudo make install

#sym-link 만들기
cd ~/usr/local/lib/python3.6/site~packages/
ln -s /usr/local/lib/python3.6/site-packages/cv2/python3.6/cv2.cpython-36m-aarch64-linux-gnu.so cv2.so

3. vscode 설치
#파일설치
git clone https://github.com/JetsonHacksNano/installVSCode.git
#설치한 파일이 있는 디렉터리로 이동
ls
cd installVSCode
#설치
./installVSCode.sh

4. 웹캠
sudo apt-get install -y fswebcam
fswebcam image.jpg

5. jetson stats
sudo -H pip install -U jetson-stats
jetson_release